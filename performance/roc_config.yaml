# dictionary with the labels for the ROC curves
# first element in the list is the label for the signal
# second element in the list is the label for the background
# third element in the list is the label

# the name is composed by the level of the feature
# (JET, PF, PAIR), an optional features
# and the plot type
ROC_TYPE_DICT:
    aux_labels:
        #0=b, 1=c, 2=bc, 3=other
        PF_b+bcVSc+other: [[0,2], [1,3], pf_clas]
        PF_b+bc+cVSother: [[0,1,2], [3], pf_clas]
        PF_b+bcVSother: [[0,2], [3], pf_clas]
        # PF_SIP_b+bcVSc+other: [[0,2], [1,3], pf_clas]
        # PF_SIP_b+bc+cVSother: [[0,1,2], [3], pf_clas]
        PF_VtxPosition: [null, null, pf_regr]
        PAIR_SameVtx: [[0], null, pair_bin]
    primary_labels:
        ## 0=b, 1=bb, 4=uds, 5=g
        #JET_bVSuds: [[0,1], [4], primary]
        #JET_bVSg: [[0,1], [5], primary]
        JET_bVSudsg: [[0,1], [4,5], primary]


CMSSW_ROC_TYPE_DICT:
    #JET_CMSSWParticleNet_bVSuds: [[0,1], [4], primary]
    #JET_CMSSWParticleNet_bVSg: [[0,1], [5], primary]
    JET_ParticleNet-CMSSW_bVSudsg: [[0,1], [4,5], primary]
    #JET_CMSSWDeepFlavour_bVSuds: [[0,1], [4], primary]
    #JET_CMSSWDeepFlavour_bVSg: [[0,1], [5], primary]
    JET_DeepFlavour-CMSSW_bVSudsg: [[0,1,2], [4,5], primary, [0,1]]
    PF_SIP_b+bcVSc+other: [[0,2], [1,3], pf_clas]
    PF_SIP_b+bc+cVSother: [[0,1,2], [3], pf_clas]
    PF_SIP_b+bcVSother: [[0,2], [3], pf_clas]

# dictionary with the extra features for the ROC curves
PF_EXTRA_FTS:
    PF_b+bcVSc+other: [pf_mask_charged]
    PF_b+bc+cVSother: [pf_mask_charged]
    PF_b+bcVSother: [pf_mask_charged]
    PF_SIP_b+bcVSc+other: [pf_mask_charged, pf_var_IPsig]
    PF_SIP_b+bc+cVSother: [pf_mask_charged, pf_var_IPsig]
    PF_SIP_b+bcVSother: [pf_mask_charged, pf_var_IPsig]
    PF_VtxPosition: [pf_mask_from_b]
    #PF_VtxPosition : [y_score_pf_clas]
    JET_DeepFlavour-CMSSW_bVSuds: [null, y_deep_score_primary]
    JET_DeepFlavour-CMSSW_bVSg: [null, y_deep_score_primary]
    JET_DeepFlavour-CMSSW_bVSudsg: [null, y_deep_score_primary]
    JET_ParticleNet-CMSSW_bVSuds: [null, y_pn_score_primary]
    JET_ParticleNet-CMSSW_bVSg: [null, y_pn_score_primary]
    JET_ParticleNet-CMSSW_bVSudsg: [null, y_pn_score_primary]

# dictionary with the weights
WEIGHTS_DICT:
    b+bcVSc+other: [0.22, 0.12, 0.03, 0.63]
    b+bc+cVSother: [0.22, 0.12, 0.03, 0.63]
    b+bcVSother: [0.22, 0.12, 0.03, 0.63]

# dictionary with the axes inf and names
AXIS_INFO:
    b+bcVSc+other: [0.4, 0.005, True Positive Rate, False Positive Rate]
    b+bc+cVSother: [0.4, 0.005, True Positive Rate, False Positive Rate]
    b+bcVSother: [0.4, 0.005, True Positive Rate, False Positive Rate]
    SameVtx:  [0.4, 0.1, True Positive Rate, False Positive Rate]
    bVSuds:  [0.5, 0.0005, b-jet efficiency, mis-id rate]
    bVSg: [0.5, 0.0005, b-jet efficiency, mis-id rate]
    bVSudsg: [0.5, 0.0005, b-jet efficiency, mis-id rate]

# dictionary with the axes limits
AXIS_LIMITS:
    0: [[30, 100],[[0,0.5],[0,3]], VtxDist, 3]
    1: [[200, 200],[[-0.06,0.06],[-0.06,0.06]], VtxX, 0.2]
    2: [[200, 200],[[-0.06,0.06],[-0.06,0.06]], VtxY, 0.2]
    3: [[200, 200],[[-3, 3],[-3,3]], VtxZ, 3]

# dictionary with the special requests
SPECIAL_DICT:
    Scatter_True-Reco: VtxPosition
    LogScale: JET
    Primary: primary
    SpecialMask: y_score_pf_clas
    LabelsEpoch: labels_epoch
    LabelsBest: labels_best
    LabesTypes: {'full': ' Full', 'lite': ' Lite', 'noSVfull': ' (w/o SV) Full', 'noSVlite': ' (w/o SV) Lite', 'noSV': ' (w/o SV)', 'comp': ' comparison'}
    ReplaceString: {' (w/o SV)': 'noSV'}
